version: '3'

services:
  frontend:
    # user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.frontend
    image: frontend
    container_name: frontend
    # entrypoint: /entrypoint.sh
    depends_on:
      -  backend
    # ports:
    #  - 127.0.0.1:${FRONTEND_PORT}:8080
    ports:
      - 127.0.0.1:8080:8080
    volumes:
      - ./src/frontend:/opt/frontend
    # environment:
    #   - HOST=0.0.0.0
    #   - PORT=${FRONTEND_PORT}
    #   - CHOKIDAR_USEPOLLING=true
    #   - API_HOST=${BACKEND_RUNNING_ON}
    #   - API_PORT=${BACKEND_PORT}
    command: npm run dev
    # tty: true
  
  backend:
    user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.backend
    image: backend
    container_name: backend
    # depends_on:
    #   - db
    ports:
      - 127.0.0.1:${BACKEND_PORT}:8000

    volumes:
      - ./src/backend:/opt/backend
    # restart: always
     
    # environment:
    #   - PYTHONPATH=/opt/backend
    #   - DJANGO_SETTINGS_MODULE=api.settings
    #   - FRONTEND_PORT=${FRONTEND_PORT}
    #   - POSTGRES_DB=postgres
    #   - POSTGRES_USER=postgres
    #  - POSTGRES_PASSWORD=secret
    command: compose/uwsgi_aws.sh
    #command: /start-dev.sh

  
  db:
    image: postgres:latest
    container_name: db
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret

volumes:
  pgdata:
